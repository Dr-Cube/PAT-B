/*给定数字0-9各若干个。你可以以任意顺序排列这些数字，但必须全部使用。
目标是使得最后得到的数尽可能小（注意0不能做首位）。
例如：给定两个0，两个1，三个5，一个8，我们得到的最小的数就是10015558。
现给定数字，请编写程序输出能够组成的最小的数。
输入格式：
每个输入包含1个测试用例。
每个测试用例在一行中给出10个非负整数，顺序表示我们拥有数字0、数字1、……数字9的个数。
整数间用一个空格分隔。10个数字的总个数不超过50，且至少拥有1个非0的数字。
输出格式：
在一行中输出能够组成的最小的数。*/

#include<stdio.h>
#include<iostream>
#include<ctype.h>
using namespace std;

int main()
{
	int n[10];
	//int num[50];
	int i = 0;
	//int *p;
	cin >> n[0] >> n[1] >> n[2] >> n[3] >> n[4] >> n[5] >> n[6] >> n[7] >> n[8] >> n[9];
	if(n[i] == 0)
	{
		for (int j = 0; j < 10; j++)
		{

			for (int k = 0; k < n[j]; k++)
			{
				cout << j;
			}

		}
	}
	else
	{
		while (n[i+1] == 0)
		{

			i++;
			
		}
		cout << i+1;
		n[i+1] = n[i+1] - 1;
		for (int j = 0; j < 10; j++)
		{

			for (int k = 0; k < n[j]; k++)
			{
				cout << j;
			}

		}
	}

	
	system("pause");
	return 0;
}